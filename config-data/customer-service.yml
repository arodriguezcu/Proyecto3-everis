server:
#  port: 8090
  port: 80
#  hostname: localhost
#  hostname: 192.168.0.106
    
spring:
  application:
    name: customer-service
  data:
    mongodb:
#      uri: mongodb://${server.hostname}:27017/db_customer
#      uri: mongodb://mongo:27017/db_customer
      uri: mongodb://arodriguezcu:WoZiG7Enr4sZXJsPA6J1yAICIAeGAzczurFJNm8k3q0apmZjMRPlAdHKqoA4vCnXvwLT40VxnskXjU6AwznsuA==@arodriguezcu.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@arodriguezcu@
  kafka:
    bootstrap-servers: ${kafka.server.hostname}:${kafka.server.port}

kafka:
  server:
#    hostname: ${server.hostname}
    hostname: 20.88.211.57
#    port: 9092
    port: 29092

eureka:
  client:
    service-url:
#      defaultZone: http://${eureka.instance.hostname}:8761/eureka      
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: az-eureka-server.azurewebsites.net

msg:
  error:
    registro:
      notfound: CLIENTE NO IDENTIFICADO
      notfound.create: CLIENTE NO SE PUDO CREAR
      if.exists: CLIENTE YA EXISTE
      notfound.update: CLIENTE NO IDENTIFICADO PARA ACTUALIZAR
      notfound.delete: CLIENTE NO IDENTIFICADO PARA ELIMINAR
      customer.delete: CLIENTE ELIMINADO

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 2s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - java.net.ConnectException
    instances:
      customerServiceCircuitBreaker:
        baseConfig: default
