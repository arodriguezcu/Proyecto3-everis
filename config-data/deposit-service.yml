server:
  port: 8096
#  hostname: localhost
  hostname: 192.168.0.106
  
spring:
  application:
    name: deposit-service
  data:
    mongodb:
#      uri: mongodb://${server.hostname}:27017/db_deposit
      uri: mongodb://mongo:27017/db_deposit
  kafka:
    bootstrap-servers: ${kafka.server.hostname}:${kafka.server.port}

kafka:
  server:
    hostname: ${server.hostname}
    port: 29092

eureka:
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: ${server.hostname}
      
topic:
  name: deposit-topic
  partitions: 1
  replicas: 1
            
msg:
  error:
    registro:
      notfound: ID DE DEPOSITO NO ENCONTRADO
      notfound.update: ID DE DEPOSITO NO ENCONTRADO PARA ACTUALIZAR

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 2s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - java.net.ConnectException
    instances:
      depositServiceCircuitBreaker:
        baseConfig: default
